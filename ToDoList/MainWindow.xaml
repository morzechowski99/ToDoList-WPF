<Window x:Class="ToDoList.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoList"
        xmlns:viewModels="clr-namespace:ToDoList.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        Loaded="MainWindow_OnLoaded">
    <Window.Resources>
        <!-- ReSharper disable once InconsistentNaming -->
        <CollectionViewSource x:Key="todosViewSource"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Panel.ZIndex="1000" Name="LoadingOverlay" Grid.RowSpan="3">
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity=".5"/>
            </Grid.Background>
            <DockPanel>
                <TextBlock Text="Loading..." Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </DockPanel>
            <!-- Add controls as needed -->
        </Grid>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Padding="15,5" Margin="5" Click="UndoButton_OnClick">Undo</Button>
            <Button Padding="15,5" Margin="5" Click="RedoButton_OnClick">Redo</Button>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label>Task name</Label>
            <TextBox Grid.Row="1" Grid.Column="0" Name="TaskNameTextBox" Margin="5,0" 
                     Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, 
                    Path=Task.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True,
                    NotifyOnValidationError=True}">
            </TextBox>
            <Button Grid.Row="1" Grid.Column="1" Name="AddTaskButton" Click="AddTaskButton_Click">Add</Button>
        </Grid>
        <DataGrid Grid.Row="2" Grid.ColumnSpan="2" Margin="5" Name="TasksTable" AutoGenerateColumns="False"
                  EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource todosViewSource}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                  CanUserAddRows="False" CanUserSortColumns="False">
            <DataGrid.CommandBindings>
                <CommandBinding Command="Delete" Executed="OnDelete"></CommandBinding>
            </DataGrid.CommandBindings>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="Done" Width="Auto"
                                        Binding="{Binding Path=(viewModels:TasksListItem.IsCompleted), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Task" Width="*" Binding="{Binding Path=(viewModels:TasksListItem.Name)}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Item.(viewModels:TasksListItem.IsCompleted), NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
